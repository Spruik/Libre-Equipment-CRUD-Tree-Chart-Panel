{"version":3,"sources":["../src/utils.js"],"names":["appEvents","hostname","window","location","protocol","postgRestHost","influxHost","post","url","line","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","handleResponse","setRequestHeader","onerror","e","send","readyState","status","responseText","update","deleteMethod","statusText","get","res","JSON","parse","alert","type","title","msg","emit","showModal","html","data","src","modalClass","model","writeLine","postgresUrl","info","site","area","name","writeProductionLine"],"mappings":"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","file":"utils.js","sourcesContent":["import { appEvents } from 'app/core/core'\r\n\r\nconst hostname = window.location.hostname\r\nconst protocol = window.location.protocol\r\nexport const postgRestHost = `${protocol}//${hostname}:5436/`\r\nexport const influxHost = `${protocol}//${hostname}:8086/`\r\n\r\nexport const post = (url, line) => {\r\n  return new Promise((resolve, reject) => {\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('POST', url)\r\n    xhr.onreadystatechange = handleResponse\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n    xhr.onerror = e => reject(e)\r\n    xhr.send(line)\r\n\r\n    function handleResponse () {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          // console.log('200');\r\n          resolve(xhr.responseText)\r\n        } else if (xhr.status === 204) {\r\n          // console.log('204');\r\n          resolve(xhr.responseText)\r\n        } else if (xhr.status === 201) {\r\n          resolve(xhr.responseText)\r\n        } else {\r\n          reject(xhr.responseText)\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const update = (url, line) => {\r\n  return new Promise((resolve, reject) => {\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('PATCH', url)\r\n    xhr.onreadystatechange = handleResponse\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n    xhr.onerror = e => reject(e)\r\n    xhr.send(line)\r\n\r\n    function handleResponse () {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          // console.log('200');\r\n          resolve(xhr.responseText)\r\n        } else if (xhr.status === 204) {\r\n          // console.log('204');\r\n          resolve(xhr.responseText)\r\n        } else if (xhr.status === 201) {\r\n          resolve(xhr.responseText)\r\n        } else {\r\n          reject(xhr.responseText)\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteMethod = (url) => {\r\n  return new Promise((resolve, reject) => {\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('DELETE', url)\r\n    xhr.onreadystatechange = handleResponse\r\n    xhr.onerror = e => reject(e)\r\n    xhr.send()\r\n\r\n    function handleResponse () {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          // console.log('200');\r\n          resolve(xhr.responseText)\r\n        } else if (xhr.status === 204) {\r\n          // console.log('204');\r\n          resolve(xhr.responseText)\r\n        } else {\r\n          reject(this.statusText)\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const get = url => {\r\n  return new Promise((resolve, reject) => {\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('GET', url)\r\n    xhr.onreadystatechange = handleResponse\r\n    xhr.onerror = e => reject(e)\r\n    xhr.send()\r\n\r\n    function handleResponse () {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          var res = JSON.parse(xhr.responseText)\r\n          resolve(res)\r\n        } else {\r\n          reject(this.statusText)\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const alert = (type, title, msg) => {\r\n  appEvents.emit('alert-' + type, [title, msg])\r\n}\r\n\r\nexport const showModal = (html, data) => {\r\n  appEvents.emit('show-modal', {\r\n    src: 'public/plugins/smart-factory-equipment-crud-tree-chart-panel/partials/' + html,\r\n    modalClass: 'confirm-modal',\r\n    model: data\r\n  })\r\n}\r\n\r\nexport const writeLine = data => {\r\n  let postgresUrl = postgRestHost + 'equipment?site=eq.' + data.info.site\r\n  switch (data.type) {\r\n    case 'Site': break\r\n    case 'Area':\r\n      postgresUrl += '&area=eq.' + data.info.area\r\n      break\r\n    case 'Line':\r\n      postgresUrl += '&area=eq.' + data.info.area + '&production_line=eq.' + data.info.line\r\n      break\r\n    case 'Equipment':\r\n      postgresUrl += '&area=eq.' + data.info.area + '&production_line=eq.' + data.info.line + '&equipment=eq.' + data.name\r\n      break\r\n    default:\r\n      postgresUrl = null\r\n      break\r\n  }\r\n  return postgresUrl\r\n}\r\n\r\nexport const writeProductionLine = data => {\r\n  let postgresUrl = postgRestHost + 'equipment?site=eq.' + data.info.site\r\n  // + '&area=eq.' + rowData.Area + '&line=eq.' + rowData.Line\r\n  switch (data.type) {\r\n    case 'Site': break\r\n    case 'Area':\r\n      postgresUrl += '&area=eq.' + data.info.area\r\n      break\r\n    case 'Line':\r\n      postgresUrl += '&area=eq.' + data.info.area + '&production_line=eq.' + data.info.line\r\n      break\r\n    default:\r\n      postgresUrl = null\r\n      break\r\n  }\r\n  return postgresUrl\r\n}\r\n"]}