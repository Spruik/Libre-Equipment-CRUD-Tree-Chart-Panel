{"version":3,"sources":["../src/chart_ctrl.js"],"names":["_","$","echarts","MetricsPanelCtrl","tablePanelEditor","generateOption","getTreeStructureData","showCrudPopup","panelDefaults","targets","pageSize","showHeader","styles","columns","fontSize","ChartCtrl","$scope","$injector","templateSrv","annotationsSrv","$sanitize","variableSrv","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","onInitEditMode","hasData","listData","addEditorTab","datasource","transform","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","dataRaw","render","dataList","length","undefined","console","log","type","getRestructuredData","rows","treeData","rawCols","cols","reduce","arr","c","col","text","toLowerCase","push","i","row","serise","k","scope","elem","attrs","ctrl","$panelContainer","find","myChart","init","renderPanel","option","off","setOption","setTimeout","height","resize","window","onresize","pressTimer","clearTimeout","params","renderingCompleted","templateUrl"],"mappings":"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","file":"chart_ctrl.js","sourcesContent":["import _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport echarts from './libs/echarts.min'\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk'\r\nimport { tablePanelEditor } from './editor'\r\nimport { generateOption } from './tree_option'\r\nimport { getTreeStructureData } from './tree_convertor'\r\nimport { showCrudPopup } from './crud_ctrl'\r\n\r\nimport './css/style.css!'\r\nimport './css/input-fields.css!'\r\n\r\nconst panelDefaults = {\r\n  targets: [{}],\r\n  pageSize: null,\r\n  showHeader: true,\r\n  styles: [],\r\n  columns: [],\r\n  fontSize: '100%'\r\n}\r\n\r\nexport class ChartCtrl extends MetricsPanelCtrl {\r\n  constructor ($scope, $injector, templateSrv, annotationsSrv, $sanitize, variableSrv) {\r\n    super($scope, $injector)\r\n\r\n    this.pageIndex = 0\r\n\r\n    if (this.panel.styles === void 0) {\r\n      this.panel.styles = this.panel.columns\r\n      this.panel.columns = this.panel.fields\r\n      delete this.panel.columns\r\n      delete this.panel.fields\r\n    }\r\n\r\n    _.defaults(this.panel, panelDefaults)\r\n\r\n    this.events.on('data-received', this.onDataReceived.bind(this))\r\n    this.events.on('data-error', this.onDataError.bind(this))\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this))\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\r\n\r\n    this.hasData = false\r\n    this.listData = []\r\n  }\r\n\r\n  onInitEditMode () {\r\n    this.addEditorTab('Options', tablePanelEditor, 2)\r\n  }\r\n\r\n  issueQueries (datasource) {\r\n    this.pageIndex = 0\r\n\r\n    if (this.panel.transform === 'annotations') {\r\n      this.setTimeQueryStart()\r\n      return this.annotationsSrv\r\n        .getAnnotations({\r\n          dashboard: this.dashboard,\r\n          panel: this.panel,\r\n          range: this.range\r\n        })\r\n        .then(annotations => {\r\n          return { data: annotations }\r\n        })\r\n    }\r\n\r\n    return super.issueQueries(datasource)\r\n  }\r\n\r\n  onDataError () {\r\n    this.dataRaw = []\r\n    this.render()\r\n  }\r\n\r\n  onDataReceived (dataList) {\r\n    if (dataList.length === 0 || dataList === null || dataList === undefined) {\r\n      console.log('No data reveived')\r\n      this.hasData = false\r\n      return\r\n    } else {\r\n      this.hasData = true\r\n    }\r\n\r\n    if (dataList[0].type !== 'table') {\r\n      console.log('To show the gantt chart, please format data as a TABLE in the Metrics Setting')\r\n      return\r\n    }\r\n\r\n    const data = this.getRestructuredData(dataList[0].columns, dataList[0].rows)\r\n    this.listData = data\r\n    // convert list data to tree-structured data\r\n    const treeData = getTreeStructureData(data)\r\n    this.render(treeData, this.listData)\r\n  }\r\n\r\n  getRestructuredData (rawCols, rows) {\r\n    const data = []\r\n    const cols = rawCols.reduce((arr, c) => {\r\n      const col = c.text.toLowerCase()\r\n      arr.push(col)\r\n      return arr\r\n    }, [])\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows[i]\r\n      const serise = {}\r\n      for (let k = 0; k < cols.length; k++) {\r\n        const col = cols[k]\r\n        serise[col] = row[k]\r\n      }\r\n      data.push(serise)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  rendering () {\r\n    // this.render(this.globe_data)\r\n  }\r\n\r\n  link (scope, elem, attrs, ctrl) {\r\n    const $panelContainer = elem.find('#equipment-tree')[0]\r\n    const myChart = echarts.init($panelContainer)\r\n\r\n    function renderPanel (data) {\r\n      if (!myChart || !data) { return }\r\n      const option = generateOption(data)\r\n      // myChart.clear();\r\n      myChart.off('mouseup')\r\n      myChart.off('mousedown')\r\n      myChart.setOption(option)\r\n      setTimeout(() => {\r\n        $('#equipment-tree').height(ctrl.height - 21)\r\n        myChart.resize()\r\n        window.onresize = () => {\r\n          myChart.resize()\r\n        }\r\n      }, 500)\r\n      // set long press listener below\r\n      let pressTimer\r\n      myChart.on('mouseup', params => {\r\n        clearTimeout(pressTimer)\r\n        // console.log(params);\r\n        return false\r\n      })\r\n      myChart.on('mousedown', params => {\r\n        pressTimer = window.setTimeout(function () {\r\n          showCrudPopup(params.data, ctrl, ctrl.listData)\r\n        }, 1200)\r\n        return false\r\n      })\r\n    }\r\n\r\n    ctrl.events.on('panel-size-changed', () => {\r\n      if (myChart) {\r\n        const height = ctrl.height - 21\r\n        if (height >= 180) {\r\n          $('#equipment-tree').height(height)\r\n        }\r\n        myChart.resize()\r\n      }\r\n    })\r\n\r\n    ctrl.events.on('render', (data) => {\r\n      renderPanel(data)\r\n      ctrl.renderingCompleted()\r\n    })\r\n  }\r\n}\r\n\r\nChartCtrl.templateUrl = './partials/module.html'\r\n"]}