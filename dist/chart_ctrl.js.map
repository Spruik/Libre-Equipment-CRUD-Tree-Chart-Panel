{"version":3,"sources":["../src/chart_ctrl.js"],"names":["_","$","echarts","MetricsPanelCtrl","tablePanelEditor","generateOption","getTreeStructureData","showCrudPopup","panelDefaults","targets","pageSize","showHeader","styles","columns","fontSize","ChartCtrl","$scope","$injector","templateSrv","annotationsSrv","$sanitize","variableSrv","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","onInitEditMode","hasData","listData","addEditorTab","datasource","transform","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","dataRaw","render","dataList","length","undefined","console","log","type","getRestructuredData","rows","treeData","rawCols","cols","reduce","arr","c","col","text","toLowerCase","push","i","row","serise","k","scope","elem","attrs","ctrl","$panelContainer","find","myChart","init","renderPanel","option","off","setOption","setTimeout","height","resize","window","onresize","pressTimer","clearTimeout","params","renderingCompleted","templateUrl"],"mappings":"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","file":"chart_ctrl.js","sourcesContent":["import _ from 'lodash'\nimport $ from 'jquery'\nimport echarts from './libs/echarts.min'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport {tablePanelEditor} from './editor'\nimport {generateOption} from './tree_option'\nimport {getTreeStructureData} from './tree_convertor'\nimport {showCrudPopup} from './crud_ctrl'\n\nimport './css/style.css!'\nimport './css/input-fields.css!'\n\nconst panelDefaults = {\n  targets: [{}],\n  pageSize: null,\n  showHeader: true,\n  styles: [],\n  columns: [],\n  fontSize: '100%',\n};\n\nexport class ChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, templateSrv, annotationsSrv, $sanitize, variableSrv) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.hasData = false\n    this.listData = []\n    \n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then(annotations => {\n          return { data: annotations };\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    \n    if (dataList.length === 0 || dataList === null || dataList === undefined) {\n        console.log('No data reveived')\n        this.hasData = false\n        return\n    }else {\n        this.hasData = true\n    }\n\n    if (dataList[0].type !== 'table') {\n        console.log('To show the gantt chart, please format data as a TABLE in the Metrics Setting')\n        return\n    }\n\n    let data = this.getRestructuredData(dataList[0].columns, dataList[0].rows)\n    this.listData = data\n    //convert list data to tree-structured data\n    let treeData = getTreeStructureData(data)\n    this.render(treeData, this.listData)\n  }\n\n  getRestructuredData(rawCols, rows){\n\n    let data = []\n    let cols = rawCols.reduce((arr, c) => {\n        const col = c.text.toLowerCase()\n        arr.push(col)\n        return arr\n    }, [])\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        let serise = {}\n        for (let k = 0; k < cols.length; k++) {\n            const col = cols[k];\n            serise[col] = row[k]\n        }\n        data.push(serise)\n    }\n\n    return data\n  }\n\n  rendering(){\n    // this.render(this.globe_data)\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    const $panelContainer = elem.find('#equipment-tree')[0];\n    const myChart = echarts.init($panelContainer)\n\n    function renderPanel(data) { \n      if (!myChart || !data) { return; }\n      const option = generateOption(data)\n    //   myChart.clear();\n      myChart.off('mouseup')\n      myChart.off('mousedown')\n      myChart.setOption(option);\n      setTimeout(() => {\n        $('#equipment-tree').height(ctrl.height - 21)\n        myChart.resize();\n        window.onresize = () => {\n            myChart.resize();\n        }\n      }, 500);\n\n      //set long press listener below\n      let pressTimer\n      myChart.on('mouseup', params => {\n        clearTimeout(pressTimer);\n        // console.log(params);\n        return false;\n      })\n      myChart.on('mousedown', params => {\n        pressTimer = window.setTimeout(function() { \n          //code here\n          showCrudPopup(params.data, ctrl, ctrl.listData)\n        },1200);\n        return false; \n      })\n    }\n\n    ctrl.events.on('panel-size-changed', () => {\n        if (myChart) { \n            const height = ctrl.height - 21\n            if (height >= 180) {\n              $('#equipment-tree').height(height);\n            }\n            myChart.resize(); \n        }\n    })\n\n    ctrl.events.on('render', (data) => {\n      renderPanel(data);\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\n\nChartCtrl.templateUrl = './partials/module.html';\n\n"]}