{"version":3,"sources":["../src/tree_option.js"],"names":["generateOption","data","option","tooltip","trigger","triggerOn","formatter","type","p","parent","name","backgroundColor","borderColor","borderWidth","textStyle","color","series","top","left","bottom","right","symbolSize","label","normal","position","verticalAlign","align","fontSize","leaves","expandAndCollapse","animationDuration","animationDurationUpdate"],"mappings":";;;;;AAAA,WAASA,cAAT,CAAyBC,IAAzB,EAA+B;;AAE7B,QAAMC,SAAS;AACbC,eAAS;AACPC,iBAAS,MADF;AAEPC,mBAAW,WAFJ;AAGPC,mBAAW,sBAAK;AACd,cAAMC,OAAOC,EAAEP,IAAF,CAAOM,IAApB;AACA,cAAME,SAASD,EAAEP,IAAF,CAAOQ,MAAP,KAAkB,IAAlB,GAAyB,WAAzB,GAAuCD,EAAEP,IAAF,CAAOQ,MAA7D;AACA,cAAIN,UAAU,4DAA4DK,EAAEE,IAA9D,GAAqE,MAAnF;AACAP,qBAAW,YAAYI,IAAvB;AACAJ,qBAAW,QAAX;AACAA,qBAAW,cAAcM,MAAzB;AACA,iBAAON,OAAP;AACD,SAXM;AAYPQ,yBAAiB,OAZV;AAaPC,qBAAa,WAbN;AAcPC,qBAAa,GAdN;AAePC,mBAAW;AACPC,iBAAO;AADA;AAfJ,OADI;AAoBbC,cAAQ,CACN;AACET,cAAM,MADR;;AAGEN,cAAM,CAACA,IAAD,CAHR;;AAKEgB,aAAK,IALP;AAMEC,cAAM,KANR;AAOEC,gBAAQ,IAPV;AAQEC,eAAO,KART;;AAUEC,oBAAY,CAVd;;AAYEC,eAAO;AACLC,kBAAQ;AACNC,sBAAU,MADJ;AAENC,2BAAe,QAFT;AAGNC,mBAAO,OAHD;AAINC,sBAAU;AAJJ;AADH,SAZT;;AAqBEC,gBAAQ;AACNN,iBAAO;AACLC,oBAAQ;AACNC,wBAAU,OADJ;AAENC,6BAAe,QAFT;AAGNC,qBAAO;AAHD;AADH;AADD,SArBV;;AA+BEG,2BAAmB,IA/BrB;AAgCEC,2BAAmB,GAhCrB;AAiCEC,iCAAyB;AAjC3B,OADM;AApBK,KAAf;AA0DA,WAAO7B,MAAP;AACD;;;;;gCAEQF,c","file":"tree_option.js","sourcesContent":["function generateOption (data) {\n\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      triggerOn: 'mousemove',\n      formatter: p => {\n        const type = p.data.type\n        const parent = p.data.parent === null ? 'No parent' : p.data.parent\n        let tooltip = '<p style=\"text-align:center; background-color:#f7f7f7\">' + p.name + '</p>'\n        tooltip += 'Type : ' + type\n        tooltip += '<br />'\n        tooltip += 'Parent : ' + parent\n        return tooltip\n      },\n      backgroundColor: 'white',\n      borderColor: 'lightgray',\n      borderWidth: 0.5,\n      textStyle: {\n          color: 'black'\n      }\n    },\n    series: [\n      {\n        type: 'tree',\n\n        data: [data],\n\n        top: '1%',\n        left: '10%',\n        bottom: '1%',\n        right: '20%',\n\n        symbolSize: 9,\n\n        label: {\n          normal: {\n            position: 'left',\n            verticalAlign: 'middle',\n            align: 'right',\n            fontSize: 10,\n          }\n        },\n\n        leaves: {\n          label: {\n            normal: {\n              position: 'right',\n              verticalAlign: 'middle',\n              align: 'left'\n            }\n          }\n        },\n\n        expandAndCollapse: true,\n        animationDuration: 500,\n        animationDurationUpdate: 500\n      }\n    ]\n  }\n  return option\n}\n\nexport { generateOption }\n\n// myChart.setOption(option);\n// myChart.on('click', function(params){\n//   console.log(params)\n// })\n"]}